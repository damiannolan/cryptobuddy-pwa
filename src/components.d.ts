/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */
declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;
    componentOnReady(done: (ele?: this) => void): void;
  }

  interface HTMLAttributes {}
}

import '@stencil/router';
import 'ionicons';
import '@ionic/core';
import '@stencil/redux';

import {
  MatchResults,
} from '@stencil/router';
import {
  IExchange,
} from './model';

import {
  AppHome as AppHome
} from './components/app-home/app-home';

declare global {
  interface HTMLAppHomeElement extends AppHome, HTMLStencilElement {
  }
  var HTMLAppHomeElement: {
    prototype: HTMLAppHomeElement;
    new (): HTMLAppHomeElement;
  };
  interface HTMLElementTagNameMap {
    "app-home": HTMLAppHomeElement;
  }
  interface ElementTagNameMap {
    "app-home": HTMLAppHomeElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "app-home": JSXElements.AppHomeAttributes;
    }
  }
  namespace JSXElements {
    export interface AppHomeAttributes extends HTMLAttributes {
      
    }
  }
}


import {
  AppProfile as AppProfile
} from './components/app-profile/app-profile';

declare global {
  interface HTMLAppProfileElement extends AppProfile, HTMLStencilElement {
  }
  var HTMLAppProfileElement: {
    prototype: HTMLAppProfileElement;
    new (): HTMLAppProfileElement;
  };
  interface HTMLElementTagNameMap {
    "app-profile": HTMLAppProfileElement;
  }
  interface ElementTagNameMap {
    "app-profile": HTMLAppProfileElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "app-profile": JSXElements.AppProfileAttributes;
    }
  }
  namespace JSXElements {
    export interface AppProfileAttributes extends HTMLAttributes {
      match?: MatchResults;
    }
  }
}


import {
  AppTest as AppTest
} from './components/app-test/app-test';

declare global {
  interface HTMLAppTestElement extends AppTest, HTMLStencilElement {
  }
  var HTMLAppTestElement: {
    prototype: HTMLAppTestElement;
    new (): HTMLAppTestElement;
  };
  interface HTMLElementTagNameMap {
    "app-test": HTMLAppTestElement;
  }
  interface ElementTagNameMap {
    "app-test": HTMLAppTestElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "app-test": JSXElements.AppTestAttributes;
    }
  }
  namespace JSXElements {
    export interface AppTestAttributes extends HTMLAttributes {
      
    }
  }
}


import {
  ExchangeItem as ExchangeItem
} from './components/exchange-item/exchange-item';

declare global {
  interface HTMLExchangeItemElement extends ExchangeItem, HTMLStencilElement {
  }
  var HTMLExchangeItemElement: {
    prototype: HTMLExchangeItemElement;
    new (): HTMLExchangeItemElement;
  };
  interface HTMLElementTagNameMap {
    "exchange-item": HTMLExchangeItemElement;
  }
  interface ElementTagNameMap {
    "exchange-item": HTMLExchangeItemElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "exchange-item": JSXElements.ExchangeItemAttributes;
    }
  }
  namespace JSXElements {
    export interface ExchangeItemAttributes extends HTMLAttributes {
      exchange?: IExchange;
    }
  }
}


import {
  ExchangesList as ExchangesList
} from './components/exchanges-list/exchanges-list';

declare global {
  interface HTMLExchangesListElement extends ExchangesList, HTMLStencilElement {
  }
  var HTMLExchangesListElement: {
    prototype: HTMLExchangesListElement;
    new (): HTMLExchangesListElement;
  };
  interface HTMLElementTagNameMap {
    "exchanges-list": HTMLExchangesListElement;
  }
  interface ElementTagNameMap {
    "exchanges-list": HTMLExchangesListElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "exchanges-list": JSXElements.ExchangesListAttributes;
    }
  }
  namespace JSXElements {
    export interface ExchangesListAttributes extends HTMLAttributes {
      match?: MatchResults;
    }
  }
}


import {
  LazyImg as LazyImg
} from './components/lazy-img/lazy-img';

declare global {
  interface HTMLLazyImgElement extends LazyImg, HTMLStencilElement {
  }
  var HTMLLazyImgElement: {
    prototype: HTMLLazyImgElement;
    new (): HTMLLazyImgElement;
  };
  interface HTMLElementTagNameMap {
    "lazy-img": HTMLLazyImgElement;
  }
  interface ElementTagNameMap {
    "lazy-img": HTMLLazyImgElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "lazy-img": JSXElements.LazyImgAttributes;
    }
  }
  namespace JSXElements {
    export interface LazyImgAttributes extends HTMLAttributes {
      alt?: string;
      src?: string;
    }
  }
}


import {
  MyApp as MyApp
} from './components/my-app/my-app';

declare global {
  interface HTMLMyAppElement extends MyApp, HTMLStencilElement {
  }
  var HTMLMyAppElement: {
    prototype: HTMLMyAppElement;
    new (): HTMLMyAppElement;
  };
  interface HTMLElementTagNameMap {
    "my-app": HTMLMyAppElement;
  }
  interface ElementTagNameMap {
    "my-app": HTMLMyAppElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "my-app": JSXElements.MyAppAttributes;
    }
  }
  namespace JSXElements {
    export interface MyAppAttributes extends HTMLAttributes {
      
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }
